var mod_pagespeed_Y_KUbnwLwj = "(function(){\"use strict\";var counter=0;var alpnum=/[^a-z0-9_]/ig;window.SwfStore=function(config){config=config||{};var defaults={swf_url:'storage.swf',namespace:'swfstore',debug:false,timeout:10,onready:null,onerror:null};var key;for(key in defaults){if(defaults.hasOwnProperty(key)){if(!config.hasOwnProperty(key)){config[key]=defaults[key];}}}config.namespace=config.namespace.replace(alpnum,'_');if(window.SwfStore[config.namespace]){throw\"There is already an instance of SwfStore using the '\"+config.namespace+\"' namespace. Use that instance or specify an alternate namespace in the config.\";}this.config=config;function id(){return\"SwfStore_\"+config.namespace+\"_\"+(counter++);}function div(visible){var d=document.createElement('div');document.body.appendChild(d);d.id=id();if(!visible){d.style.position=\"absolute\";d.style.top=\"-2000px\";d.style.left=\"-2000px\";}return d;}if(config.debug){if(typeof console===\"undefined\"){var loggerOutput=div(true);window.console={log:function(msg){var m=div(true);m.innerHTML=msg;loggerOutput.appendChild(m);}};}this.log=function(type,source,msg){source=(source==='swfStore')?'swf':source;if(typeof(console[type])!==\"undefined\"){console[type]('SwfStore - '+config.namespace+' ('+source+'): '+msg);}else{console.log('SwfStore - '+config.namespace+\": \"+type+' ('+source+'): '+msg);}};}else{this.log=function(){};}this.log('info','js','Initializing...');SwfStore[config.namespace]=this;var swfContainer=div(config.debug);var swfName=id();var flashvars=\"logfn=SwfStore.\"+config.namespace+\".log&amp;\"+\"onload=SwfStore.\"+config.namespace+\".onload&amp;\"+\"onerror=SwfStore.\"+config.namespace+\".onerror&amp;\"+\"LSOName=\"+config.namespace;swfContainer.innerHTML='<object height=\"100\" width=\"500\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab\" id=\"'+swfName+'\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\">'+'	<param value=\"'+config.swf_url+'\" name=\"movie\">'+'	<param value=\"'+flashvars+'\" name=\"FlashVars\">'+'	<param value=\"always\" name=\"allowScriptAccess\">'+'	<embed height=\"375\" align=\"middle\" width=\"500\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" '+'flashvars=\"'+flashvars+'\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" quality=\"high\" loop=\"false\" play=\"true\" '+'name=\"'+swfName+'\" bgcolor=\"#ffffff\" src=\"'+config.swf_url+'\">'+'</object>';this.swf=document[swfName]||window[swfName];this._timeout=setTimeout(function(){SwfStore[config.namespace].log('error','js','Timeout reached, assuming '+config.swf_url+' failed to load and firing the onerror callback.');if(config.onerror){config.onerror();}},config.timeout*1000);};function checkData(data){if(typeof data===\"function\"){throw'SwfStore Error: Functions cannot be used as keys or values.';}}SwfStore.prototype={version:\"1.5\",ready:false,set:function(key,value){this._checkReady();checkData(key);checkData(value);this.swf.set(key,value);},get:function(key){this._checkReady();checkData(key);return this.swf.get(key);},getAll:function(){this._checkReady();var data=this.swf.getAll();if(data.__flashBugFix){delete data.__flashBugFix;}return data;},clear:function(key){this._checkReady();checkData(key);this.swf.clear(key);},_checkReady:function(){if(!this.ready){throw'SwfStore is not yet finished initializing. Pass a config.onready callback or wait until this.ready is true before trying to use a SwfStore instance.';}},\"onload\":function(){var that=this;setTimeout(function(){clearTimeout(that._timeout);that.ready=true;that.set('__flashBugFix','1');if(that.config.onready){that.config.onready();}},0);},onerror:function(){clearTimeout(this._timeout);if(this.config.onerror){this.config.onerror();}}};}());";
var mod_pagespeed_PiU1zfcWnj = "$(function(){var jplayer_ready=false;var end_sec=60;$(\"#jquery_jplayer\").jPlayer({backgroundColor:\"#ffffff\",swfPath:\"/inc\",solution:'html, flash',error:function(e){if(e.jPlayer.error.type==$.jPlayer.error.FLASH){$(\"#flashError\").click();}},ready:function(){jplayer_ready=true;}});$(\"#tabs\").delegate('.audio-preview','click',function(e){e.preventDefault();if(!jplayer_ready){show_error(\"An error occurred. Please try with a different browser.\");return;}var btn=$(this);if($(\".glyphicon\",$(btn)).hasClass('glyphicon-play')){var pos=0;var seconds=parseInt($(btn).attr('data-seconds'),10);if(seconds>60){pos=parseInt(Math.random()*(seconds-60));end_sec=pos+60;}$(btn).addClass('hide').next().removeClass('hide');$(\"#jquery_jplayer\").jPlayer('stop').jPlayer(\"setMedia\",{mp3:$(btn).attr('data-mp3')}).jPlayer(\"volume\",1).jPlayer(\"load\").jPlayer(\"play\",pos).bind($.jPlayer.event.play,function(e){$(\".glyphicon-stop\",\".audio-preview\").each(function(){$(this).removeClass('glyphicon-stop').addClass('glyphicon-play');});$(\".glyphicon\",$(btn)).attr('class','glyphicon glyphicon-stop');$(this).unbind($.jPlayer.event.play);}).bind($.jPlayer.event.pause,function(e){$(\".glyphicon\",$(btn)).attr('class','glyphicon glyphicon-play');}).bind($.jPlayer.event.timeupdate,function(e){if(parseFloat(e.jPlayer.status.currentTime,10)>=0.2){$(btn).removeClass('hide').removeClass('btn-info').addClass('btn-default').next().addClass('hide');}if(parseFloat(e.jPlayer.status.currentTime,10)>=end_sec){$(\"#jquery_jplayer\").jPlayer('stop');}}).bind($.jPlayer.event.ended,function(e){$(\".glyphicon\",$(btn)).attr('class','glyphicon glyphicon-play');}).bind($.jPlayer.event.error,function(e){$(\".glyphicon\",$(btn)).attr('class','glyphicon glyphicon-play');$(btn).removeClass('hide').next().addClass('hide');if(e.jPlayer.error.type==\"e_url\"){show_error(\"This file is not available anymore.\");$(btn).closest('.record').fadeOut(500,function(){$(this).remove();});}else{show_error(\"An error occurred. Please try again after some time.\");}})}else{$(\"#jquery_jplayer\").jPlayer('stop');}});});";
var mod_pagespeed_r5hLCbaqV6 = "var assignment_timer, set_timeout, show_with_active_filter, timeout_reassignment_handler;\n\nassignment_timer = null;\n\ntimeout_reassignment_handler = function(target, callback) {\n  return $(target).on('click', \"a[href='#reassign']\", function(e) {\n    e.preventDefault();\n    if ($(this).hasClass('disabled')) {\n      return;\n    }\n    $(this).addClass('disabled');\n    show_message(\"Processing. Please wait. <img src='/assets/img/ajax.gif'>\");\n    return $.post('/manage_ajax', $(this).attr('rel'), function(resp) {\n      if (resp.e === 0) {\n        if (callback) {\n          return callback();\n        } else {\n          return $(tabs).tabs('select', 1);\n        }\n      } else {\n        show_error(resp.s);\n        return $(link).show();\n      }\n    }, 'json');\n  });\n};\n\nset_timeout = function() {\n  if (assignment_timer) {\n    clearInterval(assignment_timer);\n  }\n  return assignment_timer = setInterval(function() {\n    var sec;\n    sec = ts_to_seconds($('#time_left', '#assignment-timeout').text());\n    if (sec > 0) {\n      return $('#time_left', '#assignment-timeout').text(sec_to_ts(sec - 1, true)).removeClass('red');\n    }\n  }, 1000);\n};\n\nshow_with_active_filter = function() {\n  $(\".record:not(:first)\", \"#tab-available\").addClass('hide');\n  if ($(\".show-low\").hasClass('active')) {\n    $(\".record\").each(function() {\n      if ($(\".difficulty-level\", $(this)).text() === 'Low') {\n        return $(this).removeClass('hide');\n      }\n    });\n    return;\n  }\n  if ($(\".show-medium\").hasClass('active')) {\n    $(\".record\").each(function() {\n      if ($(\".difficulty-level\", $(this)).text() === 'Medium') {\n        return $(this).removeClass('hide');\n      }\n    });\n    return;\n  }\n  if ($(\".show-high\").hasClass('active')) {\n    $(\".record\").each(function() {\n      if ($(\".difficulty-level\", $(this)).text() === 'High') {\n        return $(this).removeClass('hide');\n      }\n    });\n    return;\n  }\n  if ($(\".show-non-verbatim\").hasClass('active')) {\n    $(\".record\").each(function() {\n      if ($(\".verbatim\", $(this)).css('display') !== 'inline') {\n        return $(this).removeClass('hide');\n      }\n    });\n    return;\n  }\n  if ($(\".show-starred\").hasClass('active')) {\n    $(\".record\").each(function() {\n      if ($(\".star-customer-icon\", $(this)).hasClass('star-customer-starred')) {\n        return $(this).removeClass('hide');\n      }\n    });\n    return;\n  }\n  return $(\".record\", \"#tab-available\").removeClass('hide');\n};\n\n$(function() {\n  $(\"#tabs\").on('click', \"a[href='#ft_help']\", function(e) {\n    e.preventDefault();\n    return $(\"#ft-help\").modal();\n  }).on('click', \"a[href='#ft_suggest']\", function(e) {\n    e.preventDefault();\n    return $(\"#ft-suggest\").modal();\n  });\n  $(\"#raise-dispute\").on('show.bs.modal', function(e) {\n    return $(\".msg\", $(this)).text(\"Please select a reason and elaborate in comments\").removeClass('red');\n  }).on('click', \"a[href='#raise-dispute']\", function(e) {\n    var comments, modal, params, reason;\n    e.preventDefault();\n    modal = $(this).closest('.modal');\n    params = $(\"form\", $(modal)).attr(\"action\");\n    reason = $(\"select[name='reason']\", $(modal)).val();\n    if (+reason === 0) {\n      $(\".msg\", $(modal)).text(\"Please select a valid reason\").addClass(\"red\");\n      return false;\n    }\n    comments = encodeURIComponent($.trim($(\"textarea[name='comments']\", $(modal)).val()));\n    $(modal).modal('hide');\n    show_message(\"Submitting dispute. Please wait. <img src='/assets/img/ajax.gif'>\");\n    return $.post(\"/manage_ajax\", params + \"&r=\" + reason + \"&c=\" + comments, (function(resp) {\n      if (resp.e !== 0) {\n        return show_error(resp.s);\n      }\n      return show_message(\"Dispute raised successfully. We will investigate and reply back to your email in 1 week.\");\n    }), \"json\");\n  });\n  $(\"#ft-suggest\").on('show.bs.modal', function(e) {\n    $(\".msg\", $(this)).text(\"Please select a cagetory and fill in the comments\").removeClass(\"red\");\n    return $(\"textarea\", $(this)).val(\"\");\n  }).on('click', \"a[href='#ft-suggest']\", function(e) {\n    var category, comments, modal;\n    e.preventDefault();\n    modal = $(this).closest('.modal');\n    category = $(\"select\", $(modal)).val();\n    if (category === 0) {\n      $(\".msg\", $(modal)).html(\"Please select a category\").addClass('red');\n      return false;\n    }\n    comments = $(\"textarea\", $(modal)).val();\n    modal = $(modal).modal('hide');\n    show_message(\"Submitting frequent terms suggestion. <img src='/assets/img/ajax.gif'>\");\n    $.post(\"manage_ajax\", $(\"form\", $(modal)).attr(\"action\") + \"&ct=\" + category + \"&co=\" + encodeURIComponent(comments), (function(resp) {\n      if (resp.e !== 0) {\n        return show_error(resp.s);\n      }\n      return show_message(resp.s);\n    }), \"json\");\n    return false;\n  });\n  $(\"#tab-history\").on('click', \"a[href='#dispute-changes']\", function(e) {\n    var diff, diff_table, file_id, modal, part_num, record, type;\n    e.preventDefault();\n    record = $(this).closest('.record');\n    part_num = parseInt($(record).attr('data-pn'));\n    file_id = $(record).attr('data-fid');\n    diff = JSON.parse($(record).attr('data-diff-summary'));\n    diff_table = $(\"table\", $(this).closest('.diff_container'));\n    modal = $(\"#dispute-change-modal\");\n    type = $(this).closest('#tab-history').attr('data-type');\n    return dispute_changes(record, file_id, part_num, diff, diff_table, type, modal);\n  }).on('click', \"input[name='diff_type']\", function(e) {\n    var li, self, type;\n    li = $(this).closest('li.record');\n    self = $(this);\n    type = parseInt($(self).val());\n    show_message(\"Processing request. Please wait. <img src='/assets/img/ajax.gif'>\");\n    return $.getJSON(\"/manage_ajax?\" + $(\"form[name='diff_types']\", $(li)).attr(\"action\") + \"&t=\" + type, function(resp) {\n      var d, dmp, t1, t2;\n      if (resp.e !== 0) {\n        return show_error(resp.s);\n      }\n      show_message(\"Displaying \" + $(self).attr('title').toLowerCase());\n      if (type !== 0) {\n        return $(\".difftext\", $(li)).html(resp.s.replace(/\\n/g, \"<br />\")).parent().show();\n      }\n      dmp = new diff_match_patch();\n      dmp.Diff_Timeout = 10;\n      t1 = resp.s.t1;\n      t2 = resp.s.t2;\n      d = dmp.diff_main(t1, t2);\n      dmp.diff_cleanupSemantic(d);\n      return $(\".difftext\", $(li)).html(dmp.diff_prettyHtml(d)).parent().show();\n    });\n  }).on('click', '.diff_check', function(e) {\n    var handle_error, record, t1_type, t2_type, type;\n    e.preventDefault();\n    show_message(\"Processing request. Please wait. <img src='/assets/img/ajax.gif'>\");\n    record = $(this).closest('li.record');\n    type = $(this).closest('#tab-history').attr('data-type');\n    t1_type = type === 'TRANSCRIPT' ? 'Transcript' : 'Review';\n    t2_type = type === 'TRANSCRIPT' ? 'Review' : 'Proofreading';\n    handle_error = function(error) {\n      $(\".loading\", $(record)).prev().removeClass('hide').next().remove();\n      return show_error(error);\n    };\n    $(this).parent().addClass('hide').after(\"<img class='loading' src='/assets/img/ajax-horz.gif'>\");\n    return $.ajax({\n      type: 'GET',\n      url: \"/manage_ajax?\" + $(this).attr(\"rel\"),\n      dataType: 'json'\n    }).then(function(resp) {\n      var classify_changes_threshold, diff_container, diff_summary_result, diff_timeout, t1, t2, token;\n      if (resp.e !== 0) {\n        return handle_error(resp.s);\n      }\n      diff_container = $(\".diff_container\", $(record));\n      diff_timeout = 60;\n      classify_changes_threshold = 0;\n      token = resp.s.to;\n      t1 = resp.s.t1;\n      t2 = resp.s.t2;\n      build_diff_text_box(diff_container, t1, t2, diff_timeout);\n      diff_summary_result = diff_summary(t1, t2);\n      return classify_changes(classify_changes_threshold, token, diff_summary_result, function(error, classified_changes) {\n        var bad_part_threshold, disable_row_toggle, number_of_parts;\n        if (error != null) {\n          return handle_error(error);\n        }\n        disable_row_toggle = true;\n        number_of_parts = 1;\n        bad_part_threshold = null;\n        return get_diff_summary_template(function(error, template) {\n          var diff_summary_template, file_id, part_num;\n          if (error != null) {\n            return show_error(\"An error occurred. Please try again after some time.\");\n          }\n          diff_summary_template = template;\n          $(record).attr('data-diff-summary', JSON.stringify(diff_summary_result));\n          build_diff_summary_table($(record).attr('data-fid'), diff_summary_result, number_of_parts, classified_changes, record, bad_part_threshold, disable_row_toggle, diff_summary_template, token, t1_type, t2_type);\n          file_id = $(record).attr('data-fid');\n          part_num = $(record).attr('data-pn');\n          return $.ajax({\n            type: 'GET',\n            url: '/change-sets/disputes',\n            data: {\n              fid: file_id,\n              pn: part_num,\n              t: type\n            },\n            dataType: 'json'\n          }).then(function(res) {\n            if (res.e !== 0) {\n              return show_error(res.s);\n            }\n            update_disputes_status(diff_container, res.s);\n            diff_container.removeClass('hide');\n            show_message(\"Displaying diff\");\n            $(diff_container).show();\n            return $(\".loading\", $(record)).remove();\n          }).fail(function() {\n            return handle_error(\"An error occurred. Please try again after some time.\");\n          });\n        });\n      });\n    }).fail(function() {\n      return handle_error(\"An error occurred. Please try again after some time.\");\n    });\n  }).on('click', \"a[href='#diffNotes']\", function(e) {\n    e.preventDefault();\n    return $(\"#disputes-help\").modal();\n  }).on('click', '.toggle-minor', function(e) {\n    var diff_table;\n    diff_table = $(\"table\", $(this).closest('.diff_container'));\n    return $(\".change-tr\", $(diff_table)).each(function() {\n      if (!$(this).hasClass('danger')) {\n        return $(this).toggleClass('hide');\n      }\n    });\n  });\n  $(\"#dispute-change-modal\").on('click', 'a[href=\"#dispute\"]', function(e) {\n    var comments, diff_summary, file_id, modal, p_modal, part_num, record;\n    e.preventDefault();\n    modal = $(this).closest(\".modal\");\n    file_id = $(modal).attr('data-fid');\n    part_num = $(modal).attr('data-pn');\n    diff_summary = $(modal).attr('data-diff-summary');\n    record = $(`.record[data-fid='${file_id}'][data-pn=${part_num}]`, $(\"#tab-history\"));\n    comments = $(\".comments\", $(modal)).val();\n    $(modal).removeClass('fade').modal('hide');\n    p_modal = processing_modal(false);\n    return $.ajax({\n      type: 'POST',\n      url: '/change-sets/dispute',\n      data: {\n        fid: file_id,\n        t: $(modal).attr('data-type'),\n        pn: part_num,\n        d: $(modal).attr('data-disputes'),\n        ds: diff_summary,\n        c: comments\n      },\n      dataType: 'json',\n      success: function(res) {\n        var diff_container, disputes;\n        $(p_modal).modal('hide');\n        if (res.e === -1) {\n          return error_modal(\"Error\", res.s);\n        }\n        disputes = res.s.d;\n        diff_container = $(\".diff_container\", $(record));\n        update_disputes_status(diff_container, disputes);\n        return success_modal(\"Dispute Change\", res.s.msg);\n      }\n    });\n  }).on('hidden.bs.modal', function() {\n    return $(this).addClass('fade');\n  });\n  return $(\".filter-group\").on('click', '.btn', function(e) {\n    return setTimeout(function() {\n      show_with_active_filter();\n      return show_message(`Found ${($(\".record:visible:not(:first)\", \"#tab-available\").length)} files`);\n    }, 100);\n  });\n});\n";
var mod_pagespeed_sDnLHHmLIv = "var close_editor, editor_win, get_practice_files;\n\neditor_win = null;\n\nclose_editor = function() {\n  return editor_win.close();\n};\n\nget_practice_files = function() {\n  var tab;\n  tab = $(\"#practice\");\n  if ($(tab).data().loading) {\n    return;\n  }\n  $(tab).data().loading = true;\n  show_message(\"Fetching files. Please wait. <img src='/assets/img/ajax.gif'>\");\n  $(\".record-list ul li:not(:first)\", $(tab)).remove();\n  return $.ajax({\n    type: 'GET',\n    url: \"/profile_ajax\",\n    data: {\n      a: \"gpf\"\n    },\n    dataType: \"json\",\n    success: function(res) {\n      var f, i, j, len, ref, tmpl;\n      if (res.c !== 0) {\n        show_error(res.s);\n      }\n      show_message(\"The following practice files are available.\");\n      $(\".record-list ul li:first\", $(tab)).show();\n      tmpl = $(\"#practice_files_tmpl\");\n      if (res.s === null) {\n        return;\n      }\n      ref = res.s;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        f = ref[i];\n        $(\"li.record\", $(tmpl)).attr(\"id\", i);\n        $(\".filename\", $(tmpl)).text(f.name);\n        $(\".audio-preview\", $(tmpl)).attr(\"data-mp3\", `/samples/${f.fid}_${f.pn}.mp3`);\n        $(\".duration\", $(tmpl)).text(sec_to_ts(f.du));\n        $(\".select-file\", $(tmpl)).attr('data-fno', f.fno);\n        $(\".record-list ul#records\", $(tab)).append($(tmpl).html());\n      }\n      $(\".record-list ul li.record\", $(tab)).show();\n      return $(tab).data().loading = false;\n    }\n  }).fail(function() {\n    return show_error('An error occurred. Please try again after some time.');\n  });\n};\n\n$(function() {\n  return $(\"#practice\").delegate(\".btn.select-file\", 'click', function(e) {\n    var btn;\n    e.preventDefault();\n    btn = $(this).addClass('disabled');\n    if (editor_win && !editor_win.closed) {\n      return editor_win.focus();\n    }\n    editor_win = window.open('/file/practice/' + $(this).data().fno, '_blank', 'titlebar=no,location=no,menubar=no,toolbar=no,status=no,scrollbars=no,resizeable=no,top=0,left=0,height=' + window.screen.availHeight + ',width=' + window.screen.availWidth);\n    editor_win.onload = function() {\n      return $(btn).removeClass('disabled');\n    };\n    window.onbeforeunload = function(e) {\n      if (editor_win && !editor_win.closed) {\n        return 'Please note that the Editor window will be closed';\n      }\n    };\n    window.onunload = function(e) {\n      if (editor_win && !editor_win.closed) {\n        return editor_win.close();\n      }\n    };\n    return window.onfocus = function(e) {\n      if ($(\"a\", \".nav-tabs > li.active\").attr('href') === \"#practice\") {\n        return get_practice_files();\n      }\n    };\n  });\n});\n";
